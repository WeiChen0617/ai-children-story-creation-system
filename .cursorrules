# .cursorrules
# AI增强儿童故事创作系统 项目协作规范

[文件结构]
- 所有文档、代码、图片等应按模块分类存放，目录结构需清晰明了。
- Markdown文档命名需简洁明了，建议包含日期或版本号。

[文档规范]
- 所有Markdown文档需包含目录、标题、分级小节，内容条理清晰。
- 重要术语、模块、指标等需加粗或使用列表突出显示。
- 图片需放在项目根目录下的 images/ 或相应模块目录，并在文档中引用。
- 参考文献需统一编号，格式规范。

[代码规范]
- 代码需遵循PEP8（Python）或相应语言的主流风格。
- 重要函数、类需添加中英文注释，便于团队成员理解。
- 配置文件（如 requirements.txt、config.json）需及时更新，保持依赖一致。

[实验与数据归档]
- 所有实验Prompt、参数、生成样本、评估结果等需归档于 data/ 目录，建议每组实验单独建子目录，并附实验说明（如 data/2024-04-prompt-experiment/README.md）。
- 实验数据需匿名化处理，严禁存储敏感信息。
- 实现代码、模块说明、接口文档等请归档于 src/ 及 docs/ 目录，便于团队协作和后续复现。

[协作与版本控制]
- 所有修改需通过Pull Request，描述清楚修改内容及原因。
- 重要文档、代码需定期备份，建议使用Git分支管理不同功能/实验。

[伦理与合规]
- 严格遵守数据隐私与伦理规范，涉及用户/未成年人数据需提前审批。
- 发现内容偏见、伦理风险需及时记录并讨论修正方案。

[技术栈与依赖]
- 前端/界面原型建议使用 Streamlit 实现，保持界面风格一致。
- LLM 接口默认使用 OpenAI API（GPT-3.5/GPT-4），如需更换需在文档说明。
- 可读性分析统一使用 Textstat 库，相关依赖需写入 requirements.txt。
- 如需引入新框架/库，需在 README 和 requirements.txt 中注明，并在 PR 说明中说明用途。
- 推荐使用 Python 3.8 及以上版本，确保依赖兼容性。

[其他]
- 有待讨论或不确定的问题，需在文档"pending_issues.md"部分补充并定期review。
- 项目相关问题可在README或专门的issues中记录。

# 如有新需求或特殊情况，可在本文件补充说明。 